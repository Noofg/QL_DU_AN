// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnConfirmComplete;

  @NonNull
  public final Button btnDeleteProject;

  @NonNull
  public final Button btnEditExtend;

  @NonNull
  public final Button btnHistory;

  @NonNull
  public final Button btnPause;

  @NonNull
  public final Button btnReject;

  @NonNull
  public final Button btnShareTask;

  @NonNull
  public final LinearLayout lnPause;

  @NonNull
  public final LinearLayout lnShare;

  @NonNull
  public final LinearLayout lnTuChoi;

  @NonNull
  public final LinearLayout lnXacNhanHoanThanh;

  private BottomSheetDialogBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnConfirmComplete, @NonNull Button btnDeleteProject,
      @NonNull Button btnEditExtend, @NonNull Button btnHistory, @NonNull Button btnPause,
      @NonNull Button btnReject, @NonNull Button btnShareTask, @NonNull LinearLayout lnPause,
      @NonNull LinearLayout lnShare, @NonNull LinearLayout lnTuChoi,
      @NonNull LinearLayout lnXacNhanHoanThanh) {
    this.rootView = rootView;
    this.btnConfirmComplete = btnConfirmComplete;
    this.btnDeleteProject = btnDeleteProject;
    this.btnEditExtend = btnEditExtend;
    this.btnHistory = btnHistory;
    this.btnPause = btnPause;
    this.btnReject = btnReject;
    this.btnShareTask = btnShareTask;
    this.lnPause = lnPause;
    this.lnShare = lnShare;
    this.lnTuChoi = lnTuChoi;
    this.lnXacNhanHoanThanh = lnXacNhanHoanThanh;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConfirmComplete;
      Button btnConfirmComplete = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirmComplete == null) {
        break missingId;
      }

      id = R.id.btnDeleteProject;
      Button btnDeleteProject = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteProject == null) {
        break missingId;
      }

      id = R.id.btnEditExtend;
      Button btnEditExtend = ViewBindings.findChildViewById(rootView, id);
      if (btnEditExtend == null) {
        break missingId;
      }

      id = R.id.btnHistory;
      Button btnHistory = ViewBindings.findChildViewById(rootView, id);
      if (btnHistory == null) {
        break missingId;
      }

      id = R.id.btnPause;
      Button btnPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPause == null) {
        break missingId;
      }

      id = R.id.btnReject;
      Button btnReject = ViewBindings.findChildViewById(rootView, id);
      if (btnReject == null) {
        break missingId;
      }

      id = R.id.btnShareTask;
      Button btnShareTask = ViewBindings.findChildViewById(rootView, id);
      if (btnShareTask == null) {
        break missingId;
      }

      id = R.id.lnPause;
      LinearLayout lnPause = ViewBindings.findChildViewById(rootView, id);
      if (lnPause == null) {
        break missingId;
      }

      id = R.id.lnShare;
      LinearLayout lnShare = ViewBindings.findChildViewById(rootView, id);
      if (lnShare == null) {
        break missingId;
      }

      id = R.id.lnTuChoi;
      LinearLayout lnTuChoi = ViewBindings.findChildViewById(rootView, id);
      if (lnTuChoi == null) {
        break missingId;
      }

      id = R.id.lnXacNhanHoanThanh;
      LinearLayout lnXacNhanHoanThanh = ViewBindings.findChildViewById(rootView, id);
      if (lnXacNhanHoanThanh == null) {
        break missingId;
      }

      return new BottomSheetDialogBinding((LinearLayout) rootView, btnConfirmComplete,
          btnDeleteProject, btnEditExtend, btnHistory, btnPause, btnReject, btnShareTask, lnPause,
          lnShare, lnTuChoi, lnXacNhanHoanThanh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
